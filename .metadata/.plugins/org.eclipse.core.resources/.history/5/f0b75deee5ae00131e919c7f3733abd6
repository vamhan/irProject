

package controller.lucene;
import java.io.IOException;

import controller.lucene.search.*;
import java.util.Scanner;

import org.apache.lucene.analysis.en.EnglishAnalyzer;
import org.apache.lucene.document.Document;
import org.apache.lucene.queryparser.classic.ParseException;
import org.apache.lucene.search.ScoreDoc;
import org.apache.lucene.store.Directory;
import org.apache.lucene.store.RAMDirectory;
import org.apache.lucene.util.Version;


public class Main {
    
	private static String FILEPATH = "D:/IT4BI Courses - Semester 2/Information Retrieval/_projects/Code/file/";
	private String inputQuery;
	
    /** Creates a new instance of Main */
    public Main() {
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {

      try {

      	// configure index properties
        EnglishAnalyzer analyzer = new EnglishAnalyzer(Version.LUCENE_41);  
      	Directory indexDir = new RAMDirectory();
        
      	// build a lucene index
        //System.out.println("---rebuildIndexes");
        Indexer indexer = new Indexer(indexDir, analyzer, FILEPATH);
        indexer.rebuildIndex();
        //System.out.println("---rebuildIndexes done");

        // perform searches and retrieve the results
        SearchEngine searcher = new SearchEngine(indexDir, analyzer);
        System.out.print("Input Query: ");
        Scanner in = new Scanner(System.in);
        String query = in.nextLine();
        searchTeam(searcher, query);
      } catch (Exception e) {
        System.out.println("Exception caught.");
        System.out.println(e.getMessage());
        e.printStackTrace();
      }
    }

    
//    public static void search (SearchEngine searcher, String query) 
//    throws IOException, ParseException {
//        System.out.println("---Query: " + query);
//        ScoreDoc[] hits = searcher.performSearch(query);
//        System.out.println("---Results found: " + hits.length);
//        for(int i=0;i<hits.length;++i) {
//          int docId = hits[i].doc;
//          Document doc = searcher.getDoc(docId);
//          System.out.println(doc.get("name") + ", " + doc.get("city") + " - score: " + hits[i].score);
//        }
//        System.out.println("---end of query results");
//    }
    
    public static void searchTeam(SearchEngine searcher, String query) 
    throws IOException, ParseException {
        System.out.println("---Query: " + query);
        ScoreDoc[] hits = searcher.performSearch(query);
        System.out.println("---Results found: " + hits.length);
        for(int i=0;i<hits.length;++i) {
          int docId = hits[i].doc;
          Document doc = searcher.getDoc(docId);
          System.out.println(doc.get("filename") + ", " + " - score: " + hits[i].score);
        }
        System.out.println("---end of query results");
    }
    
}
