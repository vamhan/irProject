package controller;
import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.Scanner;

import org.apache.http.HttpResponse;
import org.apache.http.client.HttpClient;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.impl.client.DefaultHttpClient;
import org.json.JSONObject;

import com.hp.hpl.jena.ontology.OntModel;
import com.hp.hpl.jena.query.Query;
import com.hp.hpl.jena.query.QueryExecution;
import com.hp.hpl.jena.query.QueryExecutionFactory;
import com.hp.hpl.jena.query.QueryFactory;
import com.hp.hpl.jena.query.ResultSet;
import com.hp.hpl.jena.query.ResultSetFormatter;
import com.hp.hpl.jena.rdf.model.Model;
import com.hp.hpl.jena.rdf.model.ModelFactory;
import com.hp.hpl.jena.sparql.engine.http.QueryExceptionHTTP;

public class DBPediaRequest {

	static HttpClient client;
	
	/*public static JSONObject getResult(String keyword) {
		try {
			if (client == null) {
				client = new DefaultHttpClient();
			}
			String getURL = "http://lookup.dbpedia.org/api/search/KeywordSearch?QueryString=" + keyword;
			HttpGet get = new HttpGet(getURL);
			get.setHeader("Accept", "application/json");
			HttpResponse responseGet = client.execute(get);
			BufferedReader rd = new BufferedReader(new InputStreamReader(
					responseGet.getEntity().getContent()));
	
			StringBuffer result = new StringBuffer();
			String line = "";
			while ((line = rd.readLine()) != null) {
				result.append(line);
			}
	
			JSONObject o = new JSONObject(result.toString());
			
			rd.close();
			get.abort();
			
			return o;
		} catch (Exception e) {
			e.printStackTrace();
			return null;
		}

	}*/
	
	public static void main(String[] args) {
		String s2 = "PREFIX  dbo: <http://dbpedia.org/ontology/>\n" +
                "\n" +
                "SELECT  ?pageurl ?wikiid\n" +
                "WHERE\n" +
                "  { ?pageurl <http://purl.org/dc/terms/subject> <http://dbpedia.org/resource/Category:Berlin> .\n" +
                "    ?pageurl dbo:wikiPageID ?wikiid .\n" +
                "  }\n" +
                "";

        Query query = QueryFactory.create(s2); //s2 = the query above
        QueryExecution qExe = QueryExecutionFactory.sparqlService( "http://dbpedia.org/sparql", query );
        ResultSet results = qExe.execSelect();
        ResultSetFormatter.out(System.out, results, query) ;
        
		/*Model model = ModelFactory.createDefaultModel();

    // Create a new query
    String queryString =        
      "PREFIX dbo: <http://dbpedia.org/ontology/>"
      + "SELECT ?pageurl ?wikiid WHERE {"
      + "?pageurl <http://purl.org/dc/terms/subject> <http://dbpedia.org/resource/Category:Olympic_Games_in_Germany> ."
      + "?pageurl dbo:wikiPageID ?wikiid ."
      + "}";
    Query query = QueryFactory.create(queryString);

    System.out.println("----------------------");

    System.out.println("Query Result Sheet");

    System.out.println("----------------------");

    System.out.println("Direct&Indirect Descendants (model1)");

    System.out.println("-------------------");

   
    // Execute the query and obtain results
    QueryExecution qe = QueryExecutionFactory.create(query, model);
    com.hp.hpl.jena.query.ResultSet results =  qe.execSelect();

    // Output query results    
    ResultSetFormatter.out(System.out, results, query);
 
    qe.close();*/
	}
}
